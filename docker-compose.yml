version: '3.8'

services:
  forgot:
    build:
      context: ./Frontend/forgot
    ports:
      - "8634:80"
    networks:
      - app-network

  login:
    build:
      context: ./Frontend/login
    ports:
      - "8635:80"
    networks:
      - app-network

  signup:
    build:
      context: ./Frontend/signup
    ports:
      - "8636:80"
    networks:
      - app-network

  backend:
    build:
      context: ./Backend
    container_name: backend_service
    ports:
      - "3628:3628"
    env_file:
      - ./Backend/server.env  # âœ… cleaner way to load environment variables
    volumes:
      - ./Backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: ["sh", "-c", "./wait-for-postgres.sh && node server.js"]

  postgres:
    image: postgres:14
    container_name: postgres_db
    ports:
      - "5634:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
